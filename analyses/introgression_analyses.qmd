---
title: "Introgression analyses"
format: html
editor: visual
---

```{r setup}

library(tidyverse)
library(glue)
library(ggthemes)
library(colorspace)
library(latex2exp)

```

```{r}

totab <- tibble()

nsim <- 5

for (i in c(1, 3, 5)) {
  for (j in 1:nsim) {
    totab <- read_csv(
      glue('../results/old/sim_1_{i}_{j}_introgression_error_model.csv'),
      show_col_types = FALSE, col_names = FALSE
      ) |> 
      mutate(
        n_AB = 1,
        n_ABC = i,
        sim = j
      ) |> 
      bind_rows(totab)
  }
}

colnames(totab) <- c("idx", "t_A", "t_B", "t_C", "t_2", "t_upper", "t_m", 
                    "N_AB", "N_ABC", "r", "m", 
                    "loglik", "time", "n_AB", "n_ABC", "sim")

```

```{r}

totab |> 
  filter(idx == -1) |> 
  group_by(n_AB, n_ABC, sim) |> 
  filter(loglik == max(loglik)) |> 
  ungroup() |> 
  select(-c(idx, loglik, time, sim)) |> 
  pivot_longer(-c(n_AB, n_ABC)) |> 
  group_by(n_AB, n_ABC, name) |> 
  summarise(
    mean = mean(value),
    median = median(value)
  ) |> 
  mutate(
    ILS_mean = (2/3)*exp(-(mean[name == 't_2'])/(mean[name == 'N_AB'])),
    ILS_median = (2/3)*exp(-(median[name == 't_2'])/(median[name == 'N_AB']))
  )

totab |> 
  filter(idx != -1) |> 
  group_by(n_AB, n_ABC, sim) |> 
  filter(loglik == max(loglik)) |> 
  ungroup() |> 
  select(-c(idx, loglik, time, sim)) |> 
  pivot_longer(-c(n_AB, n_ABC)) |> 
  group_by(n_AB, n_ABC, name) |> 
  summarise(
    mean = mean(value),
    median = median(value)
  ) |> 
  mutate(
    ILS_mean = (2/3)*exp(-(mean[name == 't_2'])/(mean[name == 'N_AB'])),
    ILS_median = (2/3)*exp(-(median[name == 't_2'])/(median[name == 'N_AB']))
  )

```

```{r fig.height=10, fig.width=10}

totab |> 
  ggplot() +
  geom_hline(aes(yintercept = t_A), data = filter(totab, idx == 0)) +
  geom_hline(aes(yintercept = t_A/2), data = filter(totab, idx == 0)) +
  geom_line(aes(idx, t_A, color = as.character(n_ABC))) +
  facet_wrap(~sim, scales = "free", ncol = 1) 
  

```



```{r}

t_size <- 15

true2 <- totab %>% 
  filter(idx == -1, sim == 1) %>% 
  select(-idx, -loglik, -time, -sim) %>% 
  group_by(n_AB, n_ABC) %>% 
  pivot_longer(-c(n_AB, n_ABC)) |> 
  separate(
    name,
    c('name_1', 'name_2'),
    remove = FALSE
  ) |> 
  mutate(
    name_2 = ifelse(is.na(name_2), '', name_2),
    name_1 = factor(name_1, (c('N', 't', 'r', 'm'))),
    name_2 = factor(name_2, rev(c('AB', 'ABC', 'A', 'B', 'C', '2', 'upper', 'm', '')))
    ) 

tab_plt_2 <- totab %>% 
  filter(idx != -1) %>% 
  # filter(idx < 300) %>% 
  group_by(n_AB, n_ABC, sim) %>% 
  filter(loglik == max(loglik)) %>% 
  ungroup() %>% 
  select(-idx, -loglik, -time) %>% 
  group_by(n_ABC) %>% 
  pivot_longer(-c(sim, n_AB, n_ABC)) |> 
  separate(
    name,
    c('name_1', 'name_2'),
    remove = FALSE
  )|> 
  mutate(
    name_2 = ifelse(is.na(name_2), '', name_2),
    name_1 = factor(name_1, (c('N', 't', 'r', 'm'))),
    name_2 = factor(name_2, rev(c('AB', 'ABC', 'A', 'B', 'C', '2', 'upper', 'm', '')))
    ) 


```

```{r}


true3 <- true2 |> 
  filter((n_AB == 1 & n_ABC == 1)) |> 
  filter(name %in% c("t_A", "t_B", "t_C", "t_2", "t_upper", "t_m", 
                    "N_AB", "N_ABC", "r", "m")) |> 
  mutate(nam = as.numeric(as.factor(name)))

tab_plt_2 |> 
  # filter((n_AB == 1 & n_ABC == 1) | (n_AB == 5 & n_ABC == 5)) |> 
  filter(name %in% c("t_A", "t_B", "t_C", "t_2", "t_upper", "t_m", 
                    "N_AB", "N_ABC", "r", "m")) |> 
  mutate(nam = as.numeric(as.factor(name))) |> 
  ggplot() +
  geom_rect(aes(xmin = xmin, xmax = xmax, ymin = ymin-.5, ymax = ymax+.5), 
            fill = 'grey80',
            data = tibble(xmin = -Inf, xmax = Inf, ymin = c(1, 3, 5), ymax = c(1, 3, 5))) +
  geom_rect(aes(xmin = xmin, xmax = xmax, ymin = ymin-.5, ymax = ymax+.5), 
            fill = 'white',
            data = tibble(xmin = -Inf, xmax = Inf, ymin = c(2, 4, 6), ymax = c(2, 4, 6))) +
  geom_segment(aes(x = value, xend = value, y = nam-0.5, yend = nam+0.5), data = true3, linetype = 2) +
  # geom_jitter(aes(value, nam, color = as.character(n_AB))) +
  geom_point(aes(value, nam+(1/6)*sim-0.5, color = as.character(n_ABC))) +
  theme_few() +
  scale_y_continuous(breaks=true3$nam, labels=true3$name, expand = c(0, 0)) 


```

```{r}

true3 <- true2 |> 
  # filter((n_AB == 1 & n_ABC == 1)) |> 
  filter(name %in% c('t_A', 't_B', 't_C', 't_2', "t_m", 'N_AB', 'N_ABC')) |> 
  mutate(nam = as.numeric(as.factor(name)))

tab_plt_2 |> 
  # filter((n_AB == 1 & n_ABC == 1)) |> 
  filter(name %in% c('t_A', 't_B', 't_C', 't_2', "t_m", 'N_AB', 'N_ABC')) |> 
  mutate(nam = as.numeric(as.factor(name))) |> 
  ggplot() +
  geom_rect(aes(xmin = xmin, xmax = xmax, ymin = ymin-.5, ymax = ymax+.5), 
            fill = 'grey80',
            data = tibble(xmin = -Inf, xmax = Inf, ymin = c(1, 3, 5, 7), ymax = c(1, 3, 5, 7))) +
  geom_rect(aes(xmin = xmin, xmax = xmax, ymin = ymin-.5, ymax = ymax+.5), 
            fill = 'white',
            data = tibble(xmin = -Inf, xmax = Inf, ymin = c(2, 4, 6), ymax = c(2, 4, 6))) +
  geom_segment(aes(x = value, xend = value, y = nam-0.5, yend = nam+0.5,
                   color = as.character(n_ABC)), data = true3, linetype = 2) +
  # geom_jitter(aes(value, nam, color = as.character(n_AB))) +
  geom_point(aes(value, nam+(1/6)*sim-0.5, color = as.character(n_ABC))) +
  theme_few() +
  scale_y_continuous(breaks=true3$nam, labels=true3$name, expand = c(0, 0)) 
  


```

```{r fig.height=5, fig.width=7}

true3 <- true2 |> 
  filter(name %in% c("t_A", "t_B", "t_C", "t_2", "t_upper", "t_m", 
                    "N_AB", "N_ABC", "r", "m")) |> 
  mutate(nam = as.numeric(as.factor(name))) |> 
  ungroup() 

fornames <- filter(true3, n_AB == 1 & n_ABC == 1)

meanvals <- tab_plt_2 |> 
  # filter((n_AB == 1 & n_ABC == 1) | (n_AB == 5 & n_ABC == 5)) |> 
  filter(name %in% c("t_A", "t_B", "t_C", "t_2", "t_upper", "t_m", 
                    "N_AB", "N_ABC", "r", "m")) |> 
  # filter(name != 'rho') |> 
  mutate(nam = as.numeric(as.factor(name))) |> 
  full_join(true3, by = c('n_AB', 'n_ABC', 'name', 'name_1', 'name_2', 'nam')) |> 
  mutate(
    value = (value.x-value.y)/value.y
    ) |> 
  group_by(n_AB, n_ABC, name, name_1, name_2, nam) |> 
  summarise(
    # mean_val = median(value), 
    # qua1 = quantile(value, 0.25), 
    # qua2 = quantile(value, 0.75),
    mean_val = mean(value), 
    qua1 = mean_val-sd(value)/2, 
    qua2 = mean_val+sd(value)/2,
    )

tab_plt_2 |> 
  # filter((n_AB == 1 & n_ABC == 1) | (n_AB == 5 & n_ABC == 5)) |> 
  filter(name %in% c("t_A", "t_B", "t_C", "t_2", "t_upper", "t_m", 
                    "N_AB", "N_ABC", "r", "m")) |> 
  # filter(name != 'rho') |> 
  mutate(nam = as.numeric(as.factor(name))) |> 
  full_join(true3, by = c('n_AB', 'n_ABC', 'name', 'name_1', 'name_2', 'nam')) |> 
  mutate(value = (value.x-value.y)/value.y) |>
  ggplot() +
  geom_rect(aes(xmin = xmin, xmax = xmax, ymin = ymin-.5, ymax = ymax+.5), 
            fill = 'grey93',
            data = tibble(xmin = -Inf, xmax = Inf, ymin = c(1, 3, 5, 7, 9), ymax = c(1, 3, 5, 7, 9))) +
  geom_rect(aes(xmin = xmin, xmax = xmax, ymin = ymin-.5, ymax = ymax+.5), 
            fill = 'white',
            data = tibble(xmin = -Inf, xmax = Inf, ymin = c(2, 4, 6, 8, 10), ymax = c(2, 4, 6, 8, 10))) +
  geom_segment(aes(x = mean_val, xend = mean_val, y = nam-0.25-(n_ABC-3)/8, yend = nam+0.25-(n_ABC-3)/8, 
                   color = as.character(n_ABC)), size = 1, data = meanvals) +
  geom_segment(aes(x = qua1, xend = qua2, y = nam-(n_ABC-3)/8, yend = nam-(n_ABC-3)/8, 
                   color = as.character(n_ABC)), size = 0.5, data = meanvals) +
  # geom_jitter(aes(value, nam, color = as.character(n_AB))) +
  geom_point(aes(value, nam+(1/(nsim+1))*sim-0.5, color = as.character(n_ABC)), shape = 21) +
   geom_vline(aes(xintercept = 0), linetype = 2) +
  theme_few() +
  scale_y_continuous(
    breaks=fornames$nam,
    # labels=TeX(paste0('$', fornames$name_1, '_{', fornames$name_2, '}$')),
    labels = fornames$name,
    expand = c(0, 0)) +
  scale_color_manual(values = c('#FFC107', '#1E88E5', '#D81B60')) +
  xlab('(estimated - true) / estimated') +
  ylab('Parameter') +
  labs(color = TeX('Number of intervals ($n_{ABC}$)')) +
  theme(legend.position = 'top')
  
  # 
  # 
  # ggplot() +
  # geom_boxplot(aes(name, value, color = as.character(n_AB))) +
  # theme_few() 
  
mult <- 1.2
# ggsave('../plots/new_figure_2.pdf', height = 5/mult, width = 7/mult)

```



